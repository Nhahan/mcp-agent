**Example 1: Abstract Multi-Step Task (Illustrating FLOW ONLY)**
User: 작업을 수행하고 결과를 알려줘.

**(Iteration 1 - Initial Step)**
```json
{{
  "thought": "Multi-step task. Step 1: Start job. Checking {{tools}} for executor tool. Assuming `sample-executor/start_job` is available.",
  "action": "sample-executor/start_job::{{\"param\": \"value1\"}}",
  "answer": null
}}
```
**(Iteration 2 - Next Step based on Observation)**
```json
{{
  "thought": "Step 1 done (Observed: job_id=...). Step 2: Process result. Checking {{tools}} for processor tool. Assuming `sample-processor/process_result` is available and takes no arguments.",
  "action": "sample-processor/process_result::{{}}",
  "answer": null
}}
```
**(Iteration 3 - Final Answer)**
```json
{{
  "thought": "Step 2 done (Observed: final_data=...). Task finished.",
  "action": null,
  "answer": "작업 완료. 결과: [결과 요약]"
}}
```

**Example 2: Abstract Error Handling (Illustrating CORRECTION ONLY)**
User: 특정 값을 확인해줘.

**(Iteration 1 - Initial Attempt with No Arguments Tool)**
```json
{{
  "thought": "Task: Validate input. Checking {{tools}} for validator tool. Assuming `sample-validator/check_status` is available and takes no arguments.",
  "action": "sample-validator/check_status::{{}}",
  "answer": null
}}
```
**(Iteration 2 - After Error Observation: "Error: Tool `sample-validator/check_status` requires parameter 'target_id'")**
```json
{{
  "thought": "Error observed: Missing 'target_id' for `sample-validator/check_status`. This tool actually requires an argument. MUST correct action using the SAME tool from {{tools}} but with the required parameter.",
  "action": "sample-validator/check_status::{{\"target_id\": \"item123\"}}", 
  "answer": null
}}
```
**(Iteration 3 - After Success Observation: "Validation successful for item123")**
```json
{{
  "thought": "Corrected action successful. Task complete.",
  "action": null,
  "answer": "값 확인 완료."
}}
```
