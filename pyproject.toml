[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[project]
name = "mcp-agent"
version = "0.1.0"
description = "A ReWOO agent using Langchain/Langgraph and MCP tools"
authors = [
  { name = "Nhahan", email = "kisy324@naver.com" },
]
requires-python = ">=3.9"
# Add dependencies here if using pyproject.toml for dependency management
# dependencies = [
#     "langchain",
#     "langgraph",
#     "llama-cpp-python",
#     "python-dotenv",
# ]

[tool.poetry]
name = "mcp-agent"
version = "0.1.0"
description = ""
authors = ["Your Name <you@example.com>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
langchain = "^0.2.5"
langgraph = "^0.0.69"
fastapi = "^0.111.0"
uvicorn = {extras = ["standard"], version = "^0.30.1"}
langchain-community = "^0.2.5"
langchain-anthropic = "^0.1.15"
langchain-openai = "^0.1.8"
python-dotenv = "^1.0.1"
llama-cpp-python = "^0.2.79"
coloredlogs = "^15.0.1"
pydantic = "^2.7.4"
requests = "^2.32.3"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2.2"
pytest-asyncio = "^0.23.7"
pytest-mock = "^3.14.0"
pytest-cov = "^5.0.0"
ruff = "^0.4.9"

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # Pyflakes
    "I",   # isort
    "C",   # flake8-comprehensions
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "N",   # pep8-naming
    "S",   # flake8-bandit (security)
    "ARG", # flake8-unused-arguments
]
ignore = []

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
ignore_missing_imports = false
disallow_untyped_defs = true 